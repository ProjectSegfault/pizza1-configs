version: "2.4"
services:
  postgres:
    image: postgres:10
    restart: always
    networks:
      - invidious
    volumes:
      - postgresdata:/var/lib/postgresql/data
      - ./config/sql:/config/sql
      - ./docker/init-invidious-db.sh:/docker-entrypoint-initdb.d/init-invidious-db.sh
    environment:
      POSTGRES_DB: invidious
      POSTGRES_USER: kemal
      POSTGRES_PASSWORD: kemal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
  invidious:
    image: quay.io/invidious/invidious:latest
    restart: always
    networks:
      - invidious
    mem_limit: 1024M
    cpus: 0.5
    ports:
      - "3000:3000"
    env_file: /opt/docker/invidious/private.env
    environment:
      HMAC_KEY_PRIVATE: ${HMAC_KEY_PRIVATE}
      INVIDIOUS_CONFIG: |
        channel_threads: 1
        check_tables: true
        feed_threads: 1
        db:
          dbname: invidious
          user: kemal
          password: kemal
          host: postgres
          port: 5432
        full_refresh: false
        https_only: true
        domain: inv.bp.projectsegfau.lt
        external_port: 443
        statistics_enabled: true
        admins: ["midou"]
        dark_mode: true
        disable_proxy: false
        banner: <a href="https://projectsegfau.lt/donate">Donate to Project Segfault</a> | <a href="https://invidious.projectsegfau.lt">FR </a> <a href="https://inv.bp.projectsegfau.lt">[LU] </a><a href="https://inv.us.projectsegfau.lt">US </a><a href="https://inv.in.projectsegfau.lt">IN</a>
        enable_user_notifications: false
        default_user_preferences:
          local: true
          extend_desc: true
          quality: dash
          quality_dash: 1080p
        # does not work atm
        hmac_key: ${HMAC_KEY_PRIVATE}
    healthcheck:
      test: wget -nv --tries=1 --spider http://127.0.0.1:3000/api/v1/comments/jNQXAC9IVRw || exit 1
      interval: 30s
      timeout: 5s
      retries: 2
    depends_on:
      - postgres
  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

volumes:
  postgresdata:

networks:
  invidious:
